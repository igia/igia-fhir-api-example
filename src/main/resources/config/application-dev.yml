#
# This Source Code Form is subject to the terms of the Mozilla Public License, v.
# 2.0 with a Healthcare Disclaimer.
# A copy of the Mozilla Public License, v. 2.0 with the Healthcare Disclaimer can
# be found under the top level directory, named LICENSE.
# If a copy of the MPL was not distributed with this file, You can obtain one at
# http://mozilla.org/MPL/2.0/.
# If a copy of the Healthcare Disclaimer was not distributed with this file, You
# can obtain one at the project website https://github.com/igia.
#
# Copyright (C) 2018-2019 Persistent Systems, Inc.
#

# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    level:
        ROOT: DEBUG
        io.github.jhipster: DEBUG
        io.igia.example.fhir: DEBUG

eureka:
    instance:
        prefer-ip-address: true
    client:
        service-url:
            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/

spring:
    profiles:
        active: dev
        include:
            - swagger
            # Uncomment to activate TLS for the dev profile
            #- tls
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use Webpack dev server + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:h2:file:./target/h2db/db/igiafhirapiexample;DB_CLOSE_DELAY=-1
        username: igiafhirapiexample
        password:
        hikari:
            auto-commit: false
    h2:
        console:
            enabled: false
    jpa:
        database-platform: io.github.jhipster.domain.util.FixedH2Dialect
        database: H2
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.connection.provider_disables_autocommit: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            hibernate.cache.hazelcast.instance_name: igiafhirapiexample
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
    liquibase:
        contexts: dev
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-duration: PT1S # 1 second, see the ISO 8601 standard
    thymeleaf:
        cache: false
    sleuth:
        sampler:
            percentage: 1 # report 100% of traces
    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
        base-url: http://localhost:9411
        enabled: false
        locator:
            discovery:
                enabled: true

server:
    port: 8081

security:
    oauth2:
        client:
            access-token-uri: http://localhost:9080/auth/realms/igia/protocol/openid-connect/token
            user-authorization-uri: http://localhost:9080/auth/realms/igia/protocol/openid-connect/auth
            client-id: igiafhirapiexample
            client-secret: 67435aa2-d243-461c-b340-2496518c2271
            #client-authentication-scheme: form
            scope: openid profile email
        resource:
            #filter-order: 3
            user-info-uri: http://localhost:9080/auth/realms/igia/protocol/openid-connect/userinfo
            token-info-uri: http://localhost:9080/auth/realms/igia/protocol/openid-connect/token/introspect
            prefer-token-info: false
            jwk:
              key-set-uri: http://localhost:9080/auth/realms/igia/protocol/openid-connect/certs    

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need to activate TLS (see application-tls.yml)
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
            management-center: # Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html
                enabled: false
                update-interval: 3
                url: http://localhost:8180/mancenter
    # CORS is disabled by default on microservices, as you should access them through a gateway.
    # If you want to enable it, please uncomment the configuration below.
    # cors:
        # allowed-origins: "*"
        # allowed-methods: "*"
        # allowed-headers: "*"
        # exposed-headers: "Authorization,Link,X-Total-Count"
        # allow-credentials: true
        # max-age: 1800
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: igiafhirapiexample@localhost
        base-url: http://127.0.0.1:8081
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx:
            enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

application:
  demographics_url: http://localhost:8088/wiremock/patients    

hapi:
  fhir:
    version: dstu3
    server:
      path: /api
    rest:
      server-name: igiafhirapiexample
      server-version: 0.0.1
      implementation-description: igia Example FHIR Server
      default-response-encoding: json
      e-tag-support: enabled
      default-pretty-print: true
      exception.stacktrace: true
    validation:
      enabled: true
      request-only: true
      
hspc:
  platform:
    api:
      security:
        # determines if security is applied at the contextPath
        mode: secured
#        mode: mock
#        mode: open
      oauth2:
        clientId: hspc_resource_server
        clientSecret: secret
        scopes: openid,offline_access,launch,smart/orchestrate_launch
    # these values are used for internal calls to the auth server
    authorization:
      protocol: http #https
      host: ${AUTH_HOST:localhost}
      port: ${AUTH_PORT:8080}
      context: ~
      url: ${hspc.platform.authorization.protocol}://${hspc.platform.authorization.host}:${hspc.platform.authorization.port}${hspc.platform.authorization.context}
      authorizeUrlPath: /auth/realms/master/protocol/openid-connect/auth
      tokenUrlPath: /auth/realms/master/protocol/smart-openid-connect/token
      tokenCheckUrlPath: /auth/realms/master/protocol/openid-connect/token/introspect
      userinfoUrlPath: /auth/realms/master/protocol/openid-connect/userinfo
      smart:
        launchUrlPath: #required by library but not implemented in auth server
        registrationEndpointUrlPath: /auth/realms/master/clients-registrations/openid-connect
        urisEndpointExtensionUrl: http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris
        launchRegistrationUrl: #required by library but not implemented in auth server
        capabilities: launch-standalone, client-public, client-confidential-symmetric, sso-openid-connect, context-standalone-patient, permission-patient, permission-offline
    # the manifest output should contain these values (used to allow the API to publish different auth URL than it resolves locally, ie, Docker container)
    manifest:
      override: ${MANIFEST_OVERRIDE:false}
      protocol: http
      host: ${PUBLISHED_AUTH_HOST:}
      port: ${PUBLISHED_AUTH_PORT:}
      context: ~
      url: ${hspc.platform.manifest.protocol}://${hspc.platform.manifest.host}:${hspc.platform.manifest.port}${hspc.platform.manifest.context}
